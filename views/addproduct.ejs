<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>landing page</title>

    <!-- css file link  -->
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/media.css">

    <!-- bootstrap cdn link  -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- remix icon cdn  -->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"/>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <!-- font family use  -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

</head>
<body>
    <section id="addProductSection" class="py-5">
        <div class="container mt-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Add New Product</h4>
                </div>
                <div class="card-body">
                    <form id="addProductForm" method="post" action="/addProduct" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <!-- Product Title -->
                        <div class="mb-3">
                            <label for="productTitle" class="form-label">Product Title *</label>
                            <input type="text" class="form-control" id="productTitle" name="title" required placeholder="Enter product title">
                            <div class="invalid-feedback">Please provide a product title.</div>
                        </div>

                        <!-- Product Image -->
                        <div class="mb-3">
                            <label for="productImages" class="form-label">Product Image *</label>
                            <input type="file" class="form-control" id="ProImage" name="ProImage" accept="image/*" required>
                            <div class="invalid-feedback">Please upload a product image.</div>
                            <div class="form-text">Only JPG, JPEG, PNG allowed</div>
                            <div id="imagePreview" class="d-flex flex-wrap gap-2 mt-2"></div>
                        </div>

                        <!-- Price Fields -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="productPrice" class="form-label">Selling Price *</label>
                                <div class="input-group">
                                    <span class="input-group-text">₹</span>
                                    <input type="number" class="form-control" id="productPrice" name="price" min="0" step="0.01" required placeholder="0.00">
                                    <div class="invalid-feedback">Please provide a valid price.</div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="productOriginalPrice" class="form-label">Original Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">₹</span>
                                    <input type="number" class="form-control" id="productOriginalPrice" name="originalPrice" min="0" step="0.01" required placeholder="0.00">
                                </div>
                            </div>
                        </div>

                        <!-- Description -->
                        <div class="mb-3">
                            <label for="productDescription" class="form-label">Description *</label>
                            <textarea class="form-control" id="productDescription" name="description" rows="5" maxlength="500" required placeholder="Enter product description"></textarea>
                            <div class="invalid-feedback">Please provide a product description.</div>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="reset" class="btn btn-secondary me-md-2">Reset</button>
                            <button type="submit" class="btn btn-primary">Add Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
</body>
    <!-- bootstrap cdn link  -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // ===== SCRIPT FOR add Products ====
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('addProductForm');
            const imageInput = document.getElementById('productImages');
            const imagePreview = document.getElementById('imagePreview');

            // Image preview functionality
            imageInput.addEventListener('change', function() {
                imagePreview.innerHTML = '';
                if (this.files) {
                    Array.from(this.files).forEach(file => {
                        if (file.type.match('image.*')) {
                            const reader = new FileReader();
                            reader.onload = function(e) {
                                const img = document.createElement('img');
                                img.src = e.target.result;
                                img.className = 'img-thumbnail';
                                img.style.width = '100px';
                                img.style.height = '100px';
                                img.style.objectFit = 'cover';
                                imagePreview.appendChild(img);
                            }
                            reader.readAsDataURL(file);
                        }
                    });
                }
            });

            // Form validation
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
                
                if (form.checkValidity()) {
                    event.preventDefault();
                    // Form is valid, process the data
                    const formData = new FormData(form);
                    
                    // You can send formData to your server here
                    console.log('Form data:', Object.fromEntries(formData.entries()));
                    
                    // Show success message
                    alert('Product added successfully!');
                    form.reset();
                    form.classList.remove('was-validated');
                    imagePreview.innerHTML = '';
                }
            });

            // Price validation - ensure selling price is not greater than original price
            const priceInput = document.getElementById('productPrice');
            const originalPriceInput = document.getElementById('productOriginalPrice');
            
            originalPriceInput.addEventListener('change', function() {
                if (this.value && parseFloat(priceInput.value) > parseFloat(this.value)) {
                    priceInput.setCustomValidity('Selling price cannot be higher than original price');
                    priceInput.reportValidity();
                } else {
                    priceInput.setCustomValidity('');
                }
            });
            
            priceInput.addEventListener('change', function() {
                if (originalPriceInput.value && parseFloat(this.value) > parseFloat(originalPriceInput.value)) {
                    this.setCustomValidity('Selling price cannot be higher than original price');
                    this.reportValidity();
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    </script>
</html>